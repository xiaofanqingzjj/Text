apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: 'test_plugins.gradle'


// 一个测试的Plugin
//apply plugin: com.tencent.myplugins.MyPlugin

 //aspectjx
//apply plugin: 'android-aspectjx'

if(enable_replay) {
    apply from: project.rootDir.getAbsolutePath() + "/replay/replay_deps.gradle"
}


android {


    sourceSets {
        main {

            // 录制回放
            if(enable_replay) {
                // 录制回放包，添加多一个源代码目录
                java.srcDirs(project.rootDir.getAbsolutePath() + "/replay")
            }
        }

    }


    signingConfigs {
        release {
            storeFile file('somekey.keystore')
            storePassword 'test01'
            keyAlias = 'key0'
            keyPassword 'test01'
        }
    }

    buildFeatures {
        compose true
        aidl true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.2"
    }

    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.example.test2"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
//        versionCode 1
        versionName "1.0"
    }
    buildTypes {

        debug {
            applicationIdSuffix "debug"

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility = 11
        targetCompatibility = 11
    }

    ndkVersion "21.0.6113669"
    namespace 'com.example.test'
}

dependencies {



    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':module_bedrock')
    implementation project(':module_widgets')

    implementation project(":lottie")


    implementation 'androidx.core:core-ktx:1.2.0'

    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.google.android.material:material:1.1.0'

//    implementation 'com.tencent.mars:mars-core:1.2.5'


    //glide
    def GLIDE_VERSION = "4.13.2"
    implementation "com.github.zjupure:webpdecoder:2.1.${GLIDE_VERSION}"
    implementation "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
//    annotationProcessor "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"
    kapt "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"

    def pluginVersion = "2.23.0"
//    implementation "com.github.penfeizhou.android.animation:apng:${pluginVersion}"
//    implementation "com.github.penfeizhou.android.animation:awebp:${pluginVersion}"
    implementation "com.github.penfeizhou.android.animation:glide-plugin:${pluginVersion}"

//    compile 'com.github.sahasbhop:apng-view:1.3'


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version" // 依赖kotlin标准库


//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
//    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
//    // Optional, if you use support library fragments:
//    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'

//    implementation 'com.github.bumptech.glide:glide:4.8.0'
//    implementation 'com.tencent.mars:mars-xlog:1.2.4'
    implementation 'com.tencent.common.log:TLog:3.0.2'

    implementation 'com.eclipsesource.j2v8:j2v8:4.5.0@aar'

//    implementation 'com.github.penfeizhou.android.animation:glide-plugin:2.23.0'

//    implementation 'com.fortune:tktx:1.0.4'


//    implementation project(path: ':flutter_module3')


    // You also need to include the following Compose toolkit dependencies.
    // Compose
    implementation 'androidx.ui:ui-tooling:0.1.0-dev02'
    implementation 'androidx.ui:ui-layout:0.1.0-dev02'
    implementation 'androidx.ui:ui-material:0.1.0-dev02'

//    implementation project(":lib_flutter_plugin_annotation")
//    kapt project(":lib_flutter_plugin_annotation")

    implementation 'org.aspectj:aspectjrt:1.9.6'
//    implementation 'com.hujiang.aspectjx:aspectjx:2.0.10'

}


